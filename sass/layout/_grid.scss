.row {
	// max-width : if we have available space, then it will have the width that we specified, if not it will simply fill 100% of the available space that it has
	max-width: $grid-width;

	// Centering block element inside another block element
	margin: 0 auto;
	// margin-bottom: $gutter-horizontal;

	// Selecting everything except the last child
	&:not(:last-child) {
		margin-bottom: $gutter-vertical;
	}

	// .row::after
	@include clearfix;

	// attribute selector - selecting based on class
	// We could also use asterisk sign (*) - and this is used to select all the elements class names of which contain "col-". There is also a dollar sign to specify the elements that end with "col-".
	// It will select all of the elements in which the class attribute starts (^) with "col-"
	[class^="col-"] {
		// float - all of the child elements of the row elements are floated, so the height colapses and becomes 0. That is why we use clearfix hack.
		float: left;

		&:not(:last-child) {
			margin-right: $gutter-horizontal;
		}
	}

	.col-1-of-2 {
		// in calc() - you can mix units, and that is teh difference between doing native CSS calculations or doing them in SASS. You can also do calculations in SASS, but you can't mix the units.
		width: calc((100% - #{$gutter-horizontal}) / 2);
	}

	.col-1-of-3 {
		width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
	}

	.col-1-of-4 {
		width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
	}

	.col-2-of-3 {
		width: calc(
			2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
		);
	}

	.col-2-of-4 {
		width: calc(
			2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
		);
	}

	.col-3-of-4 {
		width: calc(
			3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
		);
	}
}
