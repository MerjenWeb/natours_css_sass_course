.form {
	&__group:not(:last-child) {
		margin-bottom: 2rem;
	}

	&__input {
		display: block;
		font-size: 1.5rem;
		font-family: inherit;
		padding: 1.5rem 2rem;
		border-radius: 2px;
		background-color: rgba($color-white, 0.5);
		color: inherit;
		border: none;
		// in order for the border not to jump
		border-bottom: 3px solid transparent;
		width: 90%;
		transition: all 0.3s;

		@include respond(tab-port) {
			width: 100%;
		}

		&:focus {
			outline: none;
			// for accessibility reasons we should never use outline alone, but also what goes below
			box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
			border-bottom: 3px solid $color-primary;
		}

		// the style that is applied when the input is invalid
		&:focus:invalid {
			border-bottom: 3px solid $color-secondary-dark;
		}

		//to style the placeholder
		&::-webkit-input-placeholder {
			color: $color-grey-dark-2;
		}
	}

	&__label {
		// to use box model properties, we have to set display block
		display: block;
		font-size: 1.2rem;
		font-weight: 700;
		margin-left: 2rem;
		margin-top: 0.7rem;
		transition: all 0.3s;
	}

	// when the placeholder is shown on the input element, then we can style it, but it is not the input that we want to style.
	// what we want to style is the label - the lable to be hidden and not the input
	// adjacent sibling selector + (the element always has to be after the first element, so label AFTER input)
	// general sibling selector ~
	&__input:placeholder-shown + &__label {
		opacity: 0;
		// if we just set the opacity to 0, then the element will still be on the page, but only invisible, but if we set visibility to hidden, then the element is gone
		// why not use the visibility without the opacity - because we cannot animate the visibilty
		visibility: hidden;
		transform: translateY(-4rem);
	}

	&__radio-group {
		display: inline-block;
		width: 49%;

		@include respond(tab-port) {
			width: 100%;
			margin-bottom: 2rem;
		}
	}

	&__radio-input {
		display: none;
	}

	&__radio-label {
		position: relative;
		padding-left: 4.5rem;
		font-size: $default-font-size;
		cursor: pointer;
	}

	&__radio-button {
		position: absolute;
		top: -0.4rem;
		left: 0;
		display: inline-block;
		height: 3rem;
		width: 3rem;
		border: 5px solid $color-primary;
		border-radius: 50%;

		&::after {
			@include absCenter;
			content: "";
			display: block;
			background-color: $color-primary;
			height: 1.3rem;
			width: 1.3rem;
			border-radius: 50%;
			opacity: 0;
			transition: all 0.3s;
		}
	}

	// as soon as we hit the label element, the radio input becomes checked
	// and then we simply select the sibling of that one, and then the child of that sibling, because that is the one we want to change when the radio is selected
	&__radio-input:checked ~ &__radio-label &__radio-button:after {
		opacity: 1;
	}
}
